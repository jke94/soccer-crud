// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoccerCrud.WebApi.Database;

#nullable disable

namespace SoccerCrud.WebApi.Migrations
{
    [DbContext(typeof(SoccerCrudDataContext))]
    [Migration("20230611173106_AddNewTablesAndRelations")]
    partial class AddNewTablesAndRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Goal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("GoalMinute")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StadiumId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StadiumId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Season", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("YearEnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YearStart")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Stadium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stadiums");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StadiumId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.TeamAway", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamAway");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.TeamHome", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamHome");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SeasonId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Goal", b =>
                {
                    b.HasOne("SoccerCrud.WebApi.Entities.Match", null)
                        .WithMany("Goals")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoccerCrud.WebApi.Entities.Player", null)
                        .WithMany("Goals")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Match", b =>
                {
                    b.HasOne("SoccerCrud.WebApi.Entities.Stadium", null)
                        .WithMany("Matchs")
                        .HasForeignKey("StadiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoccerCrud.WebApi.Entities.Tournament", null)
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Player", b =>
                {
                    b.HasOne("SoccerCrud.WebApi.Entities.Team", null)
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.TeamAway", b =>
                {
                    b.HasOne("SoccerCrud.WebApi.Entities.Team", null)
                        .WithMany("TeamAways")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.TeamHome", b =>
                {
                    b.HasOne("SoccerCrud.WebApi.Entities.Team", null)
                        .WithMany("TeamHomes")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Tournament", b =>
                {
                    b.HasOne("SoccerCrud.WebApi.Entities.Season", null)
                        .WithMany("Tournaments")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Match", b =>
                {
                    b.Navigation("Goals");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Player", b =>
                {
                    b.Navigation("Goals");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Season", b =>
                {
                    b.Navigation("Tournaments");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Stadium", b =>
                {
                    b.Navigation("Matchs");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Team", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("TeamAways");

                    b.Navigation("TeamHomes");
                });

            modelBuilder.Entity("SoccerCrud.WebApi.Entities.Tournament", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
